name: Test Frontend

on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/test_frontend.yml'
      - 'frontend/**/*'
  pull_request:
    branches: [main]
    paths:
      - '.github/workflows/test_frontend.yml'
      - 'frontend/**/*'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        node-version: [14.x]
        poetry-version: [1.1.9]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get full Python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Bootstrap poetry
        run: |
          curl -sL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py \
            | python - -y --git https://github.com/python-poetry/poetry.git
      - name: Configure poetry
        run: poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 10s poetry run pip --version || rm -rf .venv
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install
      - name: Run tests
        run: |
          cd frontend
          yarn test:ci
        env:
          SKIP_PREFLIGHT_CHECK: 'true'
          REACT_APP_BACKEND_API: http://localhost:4000
          REACT_APP_FIREBASE_API_KEY: AIzaSyASaqw4fLp2DYyfmVRfQojpXcvFzlcVKs8
          REACT_APP_FIREBASE_AUTH_DOMAIN: code2gather-df5c6.firebaseapp.com
          REACT_APP_FIREBASE_PROJECT_ID: code2gather-df5c6
          REACT_APP_FIREBASE_STORAGE_BUCKET: code2gather-df5c6.appspot.com
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: 333844889339
          REACT_APP_FIREBASE_APP_ID: 1:333844889339:web:e8aee02dd38ceceefd3a5e
          REACT_APP_FIREBASE_MEASUREMENT_ID: G-MFN27CTW6J
          REACT_APP_AGORA_APP_ID: 6e61da63d86d4d96951c2d27054273b1
