syntax = "proto3";

package code2gather;

option go_package = "models/";


// Difficulty level for questions

enum QuestionDifficulty {
  UNKNOWN_DIFFICULTY = 0;
  EASY = 1;
  MEDIUM = 2;
  HARD = 3;
}

// Language for questions

enum Language {
  UNKNOWN_LANGUGAE = 0;
  PYTHON = 1;
  JAVA = 2;
  JAVASCRIPT = 3;
}

// Question represents a question given by the interviewer to the interviewee during a mock interview session

message QuestionMessage {
  string id = 1;
  string title = 2;
  string text = 3;
  QuestionDifficulty difficulty = 4;
  string hints = 5;
}

message RoomMessage {
  string id = 1;
  string uid1 = 2;
  string uid2 = 3;
  string qid1 = 4;
  string qid2 = 5;
}

// HTTP POST request (Pairing -> Room)
message CreateRoomRequest {
  string uid1 = 1;
  string uid2 = 2;
  QuestionDifficulty difficulty = 3;
}

message CreateRoomResponse {
  string room_id = 1;
}

// HTTP POST request /meeting (Room -> History)
message CreateMeetingRequest {
  string interviewer_id = 1;
  string interviewee_id = 2;
  int32 duration = 3;
  string question_id = 4;
  QuestionDifficulty difficulty = 5;
  Language language = 6;
  string code_written = 7;
  bool is_solved = 8;
  string feedback_to_interviewee = 9;
}

// HTTP POST request /rating (Room -> History)
message CreateRatingRequest {
  float rating = 1;
  string rating_user_id = 2;
  string rated_user_id = 3;
  string room_id = 4;
}

// ===============================
// Websocket messages with client
// ===============================

enum ErrorCode {
  // success
  NO_ERROR = 0;

  // system error (unexpected error)
  UNKNOWN_ERROR = -1;

  // client/business error (expected error)
  MESSAGE_CODING_ERROR = 1;
  UNAUTHORIZED_USER = 2;
}

message ErrorResponse {
  int32 error_code = 1;
  string message = 2;
}

message ClientRequest {
  oneof request {
    JoinRoomRequest join_room_request = 1;
    ExecuteCodeRequest execute_code_request = 2;
    CompleteQuestionRequest complete_question_request = 3;
    SubmitRatingRequest submit_rating_request = 4;
  }
}

message JoinRoomRequest {
  string room_id = 1;
}

message JoinRoomResponse {
  int32 error_code = 1;
  string interviewer_id = 2;
  QuestionMessage question = 3;
}

message ExecuteCodeRequest {
  string room_id = 1;
  string code = 2;
  Language language = 3;
}

message ExecuteCodeBroadcast {
  string executing_uid = 1;
}

message ExecuteCodeResponse {
  int32 error_code = 1;
  string output = 2;
}

message DisconnectBroadcast {
  string disconnected_uid = 1;
}

message CompleteQuestionRequest {
  string room_id = 1;
  bool is_solved = 2;
  string feedback_to_interviewee = 3;
  string code_written = 4;
}

message CompleteQuestionResponse {
  int32 error_code = 1;
  string interviewer_id = 2;
  QuestionMessage next_question = 3;
}

message SubmitRatingRequest {
  string room_id = 1;
  float rating = 2;
}

message SubmitRatingResponse {
  int32 error_code = 1;
}